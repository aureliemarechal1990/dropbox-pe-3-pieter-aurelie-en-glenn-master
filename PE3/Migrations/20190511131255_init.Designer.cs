// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PE3.Data;

namespace PE3.Migrations
{
    [DbContext(typeof(QuizContext))]
    [Migration("20190511131255_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PE3.Entities.ClassRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfPupils");

                    b.Property<long>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.ToTable("ClassRooms");
                });

            modelBuilder.Entity("PE3.Entities.Pupil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate");

                    b.Property<long?>("ClassRoomId");

                    b.Property<int>("CurrentLevel");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<long?>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Pupils");
                });

            modelBuilder.Entity("PE3.Entities.PupilRegistration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClassRoomId");

                    b.Property<long>("PupilId");

                    b.Property<DateTime>("SignedUpDate");

                    b.HasKey("Id");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("PupilId");

                    b.ToTable("PupilRegistrations");
                });

            modelBuilder.Entity("PE3.Entities.Questions", b =>
                {
                    b.Property<long>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer");

                    b.Property<long>("ClassRoomId");

                    b.Property<int>("Level");

                    b.Property<string>("Question");

                    b.HasKey("QuestionId");

                    b.HasIndex("ClassRoomId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("PE3.Entities.Results", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PupilAnswer");

                    b.Property<long>("PupilId");

                    b.Property<long>("QuestionId");

                    b.HasKey("Id");

                    b.HasIndex("PupilId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("PE3.Entities.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("PE3.Entities.ClassRoom", b =>
                {
                    b.HasOne("PE3.Entities.Teacher", "Teacher")
                        .WithOne("ClassRoom")
                        .HasForeignKey("PE3.Entities.ClassRoom", "TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PE3.Entities.Pupil", b =>
                {
                    b.HasOne("PE3.Entities.ClassRoom")
                        .WithMany("Pupils")
                        .HasForeignKey("ClassRoomId");

                    b.HasOne("PE3.Entities.Teacher")
                        .WithMany("Pupils")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("PE3.Entities.PupilRegistration", b =>
                {
                    b.HasOne("PE3.Entities.ClassRoom", "ClassRoom")
                        .WithMany()
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PE3.Entities.Pupil", "Pupil")
                        .WithMany()
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PE3.Entities.Questions", b =>
                {
                    b.HasOne("PE3.Entities.ClassRoom", "ClassRoom")
                        .WithMany()
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PE3.Entities.Results", b =>
                {
                    b.HasOne("PE3.Entities.Pupil")
                        .WithMany("Results")
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PE3.Entities.Questions")
                        .WithMany("Results")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
